<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <title>{{ title }}</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.1.0/reveal.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.1.0/theme/night.min.css">

    <!-- Theme used for syntax highlighting of code -->
    <!-- <link rel="stylesheet" href="lib/css/zenburn.css"> -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/zenburn.min.css">

    <!-- <link rel="stylesheet" href="index.css"> -->
  </head>

  <style>
    .container {
      display: flex;
    }
    .col {
      flex: 1;
    }
    .pad-col {
      margin: 0;
      position: relative;
      top: 50%;
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
    }
    .subtitle {
      color: var(--teal_c) !important;
    }
    .author {
      padding-top: 2em;
    }
    .slides > section.upper-title {
      width: 100%;
      height: 100%;
    }
    section.upper-title {
      position: relative;
      top: 0 !important;
    }
    section .slide-title {
      position: absolute;
      padding: 10px 20px 10px 20px;
      top: 30px;
      left: 0px;
      text-align: left;
    }
    section > div.slide-content {
      position: absolute;
      top: 22%;
      text-align: center;
      width: 95%;
    }
    section  ul.smol {
      font-size: 0.8em;
    }
    section p.smol {
      font-size: 0.5em;
    }
    :root {
      --r-main-font: "Palatino Linotype", "Book Antiqua", Palatino;
      --r-heading-font: "Palatino Linotype", "Book Antiqua", Palatino;
      --r-heading-text-transform: none;
      --blue_a: #c7e9f1;
      --blue_b: #9cdceb;
      --blue_c: #58c4dd;
      --blue_d: #29abca;
      --blue_e: #236b8e;
      --teal_a: #acead7;
      --teal_b: #76ddc0;
      --teal_c: #5cd0b3;
      --teal_d: #55c1a7;
      --teal_e: #49a88f;
      --green_a: #c9e2ae;
      --green_b: #a6cf8c;
      --green_c: #83c167;
      --green_d: #77b05d;
      --green_e: #699c52;
      --yellow_a: #fff1b6;
      --yellow_b: #ffea94;
      --yellow_c: #ffff00;
      --yellow_d: #f4d345;
      --yellow_e: #e8c11c;
      --gold_a: #f7c797;
      --gold_b: #f9b775;
      --gold_c: #f0ac5f;
      --gold_d: #e1a158;
      --gold_e: #c78d46;
      --red_a: #f7a1a3;
      --red_b: #ff8080;
      --red_c: #fc6255;
      --red_d: #e65a4c;
      --red_e: #cf5044;
      --maroon_a: #ecabc1;
      --maroon_b: #ec92ab;
      --maroon_c: #c55f73;
      --maroon_d: #a24d61;
      --maroon_e: #94424f;
      --purple_a: #caa3e8;
      --purple_b: #b189c6;
      --purple_c: #9a72ac;
      --purple_d: #715582;
      --purple_e: #644172;
      --grey_a: #dddddd;
      --grey_b: #bbbbbb;
      --grey_c: #888888;
      --grey_d: #444444;
      --grey_e: #222222;
      --pink: #d147bd;
      --light_pink: #dc75cd;
      --orange: #ff862f;
      --light_brown: #cd853f;
      --dark_brown: #8b4513;
      --grey_brown: #736357;
    }
  </style>



  <body>
    <div class="reveal">
      <div class="slides">
        <section>
          <h2>Towards the Next Generation<br/>of Radiative Transfer Models:</h2>
          <h3 class="subtitle">Radiance Cascades</h3>
          <div class="author">
            <h4>Chris Osborne</h4>
            <h4>University of Glasgow</h4>
          </div>
        </section>
        <section class="upper-title">
          <h2 class="slide-title">Contents</h2>
          <div class="slide-content">
            <ul>
              <li>Where are we now?</li>
              <li>Radiance Cascades</li>
              <li>Applications</li>
            </ul>
          </div>
        </section>
        <section class="upper-title">
          <h2 class="slide-title">Non-LTE Radiative Transfer</h2>
          <div class="slide-content container">
            <div class="col">
              <div class="pad-col">
                <ul class="smol">
                  <li>Coupling between radiation field and atomic transitions.</li>
                  <li>Extremely computationally demanding, but necessary for spectral lines.</li>
                  <li>Needed for models, diagnostics, and inversions.</li>
                </ul>
              </div>
            </div>
            <div class="col">
              <video loop data-autoplay src="HinodeProm.mp4" width="70%">
              </video>
            </div>
          </div>
        </section>
        <section>
          <div class="container">
            <div class="col">
              <div class="pad-col">
                <ul>
                  <li>RT codes designed around the idea of smooth atmospheres</li>
                  <li class="fragment">But ours look like this</li>
                </ul>
              </div>
            </div>
            <div class="col">
              <div class="pad-col fragment">
                <img src="jk_atmos.png" width="80%"/>
                <p class="smol">Jenkins & Keppens 2021</p>
              </div>
            </div>
          </div>
        </section>
        <section class="upper-title">
        <h2 class="slide-title">Most Important Quantities</h2>
        <div class="slide-content container">
          <div class="col">
            <div class="pad-col">
              \[
                \begin{aligned}
                J_\nu(\vec{p}) &= \frac{1}{4\pi}\oint_\mathbb{S^2} I_\nu(\vec{p},\hat{\omega}) \mathop{d \hat{\omega} } \\
                &\vec{p} \in \mathbb{R}^3, \hat{\omega} \in \mathbb{S}^2\\
                \end{aligned}
              \]
              <ul>
                <li>Specific intensity and its first moment.</li>
                <li>4 and 6 dimensional functions!</li>
              </ul>
            </div>
          </div>
        </div>
        </section>
        <section class="upper-title">
        <h2 class="slide-title">Prominence Albedo</h2>
        <div class="slide-content container">
          <div class="col">
            <div class="pad-col">
              <img src="JenkinsAlbedo.png" style="height:95%"/>
              <p class="smol">Jenkins+ 2024</p>
            </div>
          </div>
        </div>
        </section>
        {{ ProbeGrid }}
        {{ InterpolatedProbe }}
        {{ PenumbraCriterion }}
        <section>
        Ray effects & resolution
        </section>
        <section>
        Penumbra criterion
        </section>
        <section>
        Rc construction
        </section>
        <section>
        Examples
        </section>
        {{ LongCharView }}
        <section>Some other stuff</section>
        <section>
          <div class="container">

            <div class="col">
            Column 1 Content
            <ul>
            <li class="fragment">A thing</li>
            <li class="fragment">Another thing</li>
            </ul>
            </div>

            <div class="col">
            Column 2 Content
            </div>
          </div>
        </section>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.1.0/reveal.min.js"></script>

    <!-- To include plugins, see: https://revealjs.com/plugins/ -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.1.0/plugin/markdown/markdown.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.1.0/plugin/notes/notes.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.1.0/plugin/math/math.min.js"></script>

    <!-- <script src="index.js"></script> -->
    <script>
      Reveal.initialize({
          plugins: [ RevealMarkdown, RevealNotes, RevealMath.KaTeX ],
        // The "normal" size of the presentation, aspect ratio will
        // be preserved when the presentation is scaled to fit different
        // resolutions. Can be specified using percentage units.
        width: "100%",
        height: "100%",

        // Factor of the display size that should remain empty around
        // the content
        margin: 0.04,

        // Bounds for smallest/largest possible scale to apply to content
        minScale: 0.2,
        maxScale: 2.0,

        // Display presentation control arrows
        controls: true,

        // Help the user learn the controls by providing hints, for example by
        // bouncing the down arrow when they first encounter a vertical slide
        controlsTutorial: false,

        // Determines where controls appear, "edges" or "bottom-right"
        controlsLayout: "bottom-right",

        // Visibility rule for backwards navigation arrows; "faded", "hidden"
        // or "visible"
        controlsBackArrows: "faded",

        // Display a presentation progress bar
        progress: false,

        // Display the page number of the current slide
        // - true:    Show slide number
        // - false:   Hide slide number
        //
        // Can optionally be set as a string that specifies the number formatting:
        // - "h.v":   Horizontal . vertical slide number (default)
        // - "h/v":   Horizontal / vertical slide number
        // - "c":   Flattened slide number
        // - "c/t":   Flattened slide number / total slides
        //
        // Alternatively, you can provide a function that returns the slide
        // number for the current slide. The function should take in a slide
        // object and return an array with one string [slideNumber] or
        // three strings [n1,delimiter,n2]. See #formatSlideNumber().
        slideNumber: true,

        // Can be used to limit the contexts in which the slide number appears
        // - "all":      Always show the slide number
        // - "print":    Only when printing to PDF
        // - "speaker":  Only in the speaker view
        showSlideNumber: "all",

        // Use 1 based indexing for # links to match slide number (default is zero
        // based)
        hashOneBasedIndex: false,

        // Add the current slide number to the URL hash so that reloading the
        // page/copying the URL will return you to the same slide
        hash: false,

        // Flags if we should monitor the hash and change slides accordingly
        respondToHashChanges: false,

        // Push each slide change to the browser history.  Implies `hash: true`
        history: false,

        // Enable keyboard shortcuts for navigation
        keyboard: true,

        // Optional function that blocks keyboard events when retuning false
        //
        // If you set this to 'focused', we will only capture keyboard events
        // for embedded decks when they are in focus
        keyboardCondition: null,

        // Disables the default reveal.js slide layout (scaling and centering)
        // so that you can use custom CSS layout
        disableLayout: false,

        // Enable the slide overview mode
        overview: true,

        // Vertical centering of slides
        center: true,

        // Enables touch navigation on devices with touch input
        touch: true,

        // Loop the presentation
        loop: false,

        // Change the presentation direction to be RTL
        rtl: false,

        // Changes the behavior of our navigation directions.
        //
        // "default"
        // Left/right arrow keys step between horizontal slides, up/down
        // arrow keys step between vertical slides. Space key steps through
        // all slides (both horizontal and vertical).
        //
        // "linear"
        // Removes the up/down arrows. Left/right arrows step through all
        // slides (both horizontal and vertical).
        //
        // "grid"
        // When this is enabled, stepping left/right from a vertical stack
        // to an adjacent vertical stack will land you at the same vertical
        // index.
        //
        // Consider a deck with six slides ordered in two vertical stacks:
        // 1.1    2.1
        // 1.2    2.2
        // 1.3    2.3
        //
        // If you're on slide 1.3 and navigate right, you will normally move
        // from 1.3 -> 2.1. If "grid" is used, the same navigation takes you
        // from 1.3 -> 2.3.
        navigationMode: "default",

        // Randomizes the order of slides each time the presentation loads
        shuffle: false,

        // Turns fragments on and off globally
        fragments: true,

        // Flags whether to include the current fragment in the URL,
        // so that reloading brings you to the same fragment position
        fragmentInURL: true,

        // Flags if the presentation is running in an embedded mode,
        // i.e. contained within a limited portion of the screen
        embedded: false,

        // Flags if we should show a help overlay when the question-mark
        // key is pressed
        help: true,

        // Flags if it should be possible to pause the presentation (blackout)
        pause: true,

        // Flags if speaker notes should be visible to all viewers
        showNotes: false,

        // Global override for autolaying embedded media (video/audio/iframe)
        // - null:   Media will only autoplay if data-autoplay is present
        // - true:   All media will autoplay, regardless of individual setting
        // - false:  No media will autoplay, regardless of individual setting
        autoPlayMedia: null,

        // Global override for preloading lazy-loaded iframes
        // - null:   Iframes with data-src AND data-preload will be loaded when within
        //           the viewDistance, iframes with only data-src will be loaded when visible
        // - true:   All iframes with data-src will be loaded when within the viewDistance
        // - false:  All iframes with data-src will be loaded only when visible
        preloadIframes: null,

        // Can be used to globally disable auto-animation
        autoAnimate: true,

        // Optionally provide a custom element matcher that will be
        // used to dictate which elements we can animate between.
        autoAnimateMatcher: null,

        // Default settings for our auto-animate transitions, can be
        // overridden per-slide or per-element via data arguments
        autoAnimateEasing: "ease",
        autoAnimateDuration: 1.0,
        autoAnimateUnmatched: true,

        // CSS properties that can be auto-animated. Position & scale
        // is matched separately so there's no need to include styles
        // like top/right/bottom/left, width/height or margin.
        autoAnimateStyles: [
          "opacity",
          "color",
          "background-color",
          "padding",
          "font-size",
          "line-height",
          "letter-spacing",
          "border-width",
          "border-color",
          "border-radius",
          "outline",
          "outline-offset",
        ],

        // Controls automatic progression to the next slide
        // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute
        //           is present on the current slide or fragment
        // - 1+:     All slides will progress automatically at the given interval
        // - false:  No auto-sliding, even if data-autoslide is present
        autoSlide: 0,

        // Stop auto-sliding after user input
        autoSlideStoppable: true,

        // Use this method for navigation when auto-sliding (defaults to navigateNext)
        autoSlideMethod: null,

        // Specify the average time in seconds that you think you will spend
        // presenting each slide. This is used to show a pacing timer in the
        // speaker view
        defaultTiming: null,

        // Enable slide navigation via mouse wheel
        mouseWheel: false,

        // Opens links in an iframe preview overlay
        // Add `data-preview-link` and `data-preview-link="false"` to customize each link
        // individually
        previewLinks: false,

        // Exposes the reveal.js API through window.postMessage
        postMessage: true,

        // Dispatches all reveal.js events to the parent window through postMessage
        postMessageEvents: false,

        // Focuses body when page changes visibility to ensure keyboard shortcuts work
        focusBodyOnPageVisibilityChange: true,

        // Transition style
        transition: "none", // none/fade/slide/convex/concave/zoom

        // Transition speed
        transitionSpeed: "default", // default/fast/slow

        // Transition style for full page slide backgrounds
        backgroundTransition: "none", // none/fade/slide/convex/concave/zoom

        // The maximum number of pages a single slide can expand onto when printing
        // to PDF, unlimited by default
        pdfMaxPagesPerSlide: undefined,

        // Prints each fragment on a separate slide
        pdfSeparateFragments: true,

        // Offset used to reduce the height of content within exported PDF pages.
        // This exists to account for environment differences based on how you
        // print to PDF. CLI printing options, like phantomjs and wkpdf, can end
        // on precisely the total height of the document whereas in-browser
        // printing has to end one pixel before.
        pdfPageHeightOffset: -1,

        // Number of slides away from the current that are visible
        viewDistance: 3,

        // Number of slides away from the current that are visible on mobile
        // devices. It is advisable to set this to a lower number than
        // viewDistance in order to save resources.
        mobileViewDistance: 2,

        // The display mode that will be used to show slides
        display: "block",

        // Hide cursor if inactive
        hideInactiveCursor: true,

        // Time before the cursor is hidden (in ms)
        hideCursorTime: 5000
      });

      // Fix found by @t-fritsch on GitHub
      // see: https://github.com/hakimel/reveal.js/discussions/3362#discussioncomment-6651475.
      function fixBase64VideoBackground(event) {
        // event.previousSlide, event.currentSlide, event.indexh, event.indexv
        if (event.currentSlide.getAttribute('data-background-video')) {
          const background = Reveal.getSlideBackground(event.indexh, event.indexv),
            video = background.querySelector('video'),
            sources = video.querySelectorAll('source');

          sources.forEach((source, i) => {
            const src = source.getAttribute('src');
            if(src.match(/^data:video.*;base64$/)) {
              const nextSrc = sources[i+1]?.getAttribute('src');
              video.setAttribute('src', `${src},${nextSrc}`);
            }
          });
        }
      }
      Reveal.on( 'ready', fixBase64VideoBackground );
      Reveal.on( 'slidechanged', fixBase64VideoBackground );
    </script>

  </body>
</html>