---
title: '[Towards the Next Generation<br/>of Radiative Transfer Models:]{.r-fit-text}'
subtitle: '[Radiance Cascades]{style="color: var(--teal_c);"}'
author:
  name: Chris Osborne
  affiliation: University of Glasgow
format:
  revealjs:
    slide-number: true
    footer: "Radiance Cascades"
    theme: [night, my_style.scss]
    progress: false
    html-math-method: katex
---

## Contents

::: {.v-center-container}

- Where are we now?
- Radiance Cascades âœ¨
- Application
- Outlook

:::

## Promotion...

![](static_assets/Abstract.png){fig-align="center"}

## Non-LTE Radiative Transfer {.smaller}

:::: {.columns .v-center-container}

::: {.column width="50%"}
- Coupling between radiation field and atomic transitions.
- Extremely computationally demanding, but necessary for many spectral lines.
- Needed for models, diagnostics, and inversions.
- Also, ionisation.
:::

::: {.column width="50%"}
<video loop data-autoplay src="static_assets/HinodeProm.mp4" width="99%"></video>
:::

::::

## Non-LTE Radiative Transfer {.smaller}

:::: {.columns .v-center-container}

::: {.column width="50%" .incremental}
- RT codes designed around the idea of smooth atmospheres...
- But ours look like this
:::

::: {.column width="50%" .fragment}
![](static_assets/jk_atmos.png){style="max-width: 80%;"}

[Jenkins & Keppens 2022]{.attrib}

:::

::::

## Radiative Rates?

## Most Important Quantities {.smaller}

::: {.v-center-container .horiz-center}

::: {.column}

```{=tex}
\begin{align*}
    J_\nu(\vec{p}) &= \frac{1}{4\pi}\oint_\mathbb{S^2} I_\nu(\vec{p},\hat{\omega}) \mathop{d \hat{\omega} } \\
    &\vec{p} \in \mathbb{R}^3, \hat{\omega} \in \mathbb{S}^2\\
\end{align*}
```

- Specific intensity and its first moment.
- 4 and 6 dimensional functions!

:::

:::

## Prominence Albedo

![](static_assets/JenkinsAlbedo.png){fig-align="center"}

::: {.horiz-center}
[Jenkins+ 2024]{.attrib}
:::

## Ray Effects

![](static_assets/ScRays.png){fig-align="center"}

## Desired Result

![](static_assets/RcRays.png){fig-align="center"}

# How do we build this?

{{ PenumbraCriterion }}

## Observations {.smaller}

:::: {.columns .v-center-container}

::: {.column width="60%"}

```{=tex}
\begin{cases}
A < B,\\
\alpha > \beta.
\end{cases}
```
with some small angles approximations...
```{=tex}
\begin{cases}
\Delta_s < F(D) \propto D\quad&\mathrm{(spatial)}\\
\Delta_\omega < G(1/D) \propto 1/D\quad&\mathrm{(angular)}
\end{cases}
```

- We can exploit this!
- Represent contributions from different shells separately.

:::

::: {.column width="50%"}

![](static_assets/PenumbraCriterionFrame.png)

:::
::::

{{ LongCharView }}

{{ RcProbeNear }}

{{ RcProbeFar }}

## How do we use this? {.smaller}

::: {.columns .v-center-container}

::: {.column}
- Encode radiance field as a set of cascades, each describing $I_\nu$ in annuli around $\vec{p}$.
- If penumbra criterion is satisfied, cascade is linearly interpolateable!
- Simple (maybe not optimal) definition of cascade $i$ covering $[t_i, t_{i+1}]$, ($\alpha \geq 1)$:

```{=tex}
\begin{cases}
\Delta_s \propto 2^i,\\
\Delta_\omega \propto \cfrac{1}{2^{\alpha i}},\\
t_i \propto 2^{\alpha i}
\end{cases}
```

- Exponential scaling
- A single radiation field sample $\mathcal{R}_{t_i, t_{i+1}}(\vec{p},\hat{\omega})$ termed radiance interval.
- But what does these cascades look like?

:::
:::

{{ ProbeGrid }}

## Probe Interpolation {.smaller}

::: {.columns .v-center-container}
::: {.column}
- This construction sparsely encodes the radiation field throughout the domain...
- But not in a form we can use directly.
- Solution:

::: {.fragment .horiz-center}
<br/>[Interpolation. But with minimal error.]{style="color: var(--teal_c);"}
:::
:::
:::

{{ InterpolatedProbe }}

## Interpolated Ray Analysis {.smaller}

- Each cascade $i+1$ has 1/2 the rays of cascade $i$ (denoted $N_{C_i}$)
- By interpolation we construct $\mathcal{R}_{t_{i+1},t_{i+2}}(\vec{p},\hat{\omega})$ for each probe of cascade $i$ $\left([t_i, t_{i+1}]\right)$.
- Merging cascades 0 and 1:
```{=tex}
\begin{cases}
\text{Rays computed} = N_{C_0} + N_{C_1} = N_{C_0} + \cfrac{N_{C_0}}{2},\\
\text{Rays constructed} = 2N_{C_0}.
\end{cases}
```

::: {.fragment}
- In general:
```{=tex}
\begin{cases}
\text{Rays computed} = \sum_I N_{C_i} = \left(1 + \cfrac{1}{2} + \cdots + \cfrac{1}{2^I} \right) < 2N_{C_0},\\
\text{Rays constructed} = 2^I N_{C_0}.
\end{cases}
```
:::

::: {.fragment style="color: var(--teal_c);"}
Sublinear (bounded) scaling in compute, [exponential]{.fragment .red-shift} scaling in constructed rays!
:::

## Applications

- Blah